AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stack with VPC, EC2 instance with SSM access, and Secrets Manager secret'

Resources:
  # VPC and Network Configuration
  StackVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  StackInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-igw

  StackAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref StackVPC
      InternetGatewayId: !Ref StackInternetGateway

  StackPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref StackVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet

  StackRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref StackVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-rt

  StackPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: StackAttachGateway
    Properties:
      RouteTableId: !Ref StackRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref StackInternetGateway

  StackSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref StackPublicSubnet
      RouteTableId: !Ref StackRouteTable

  # IAM Role for SSM
  StackSSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ssm-role

  StackInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref StackSSMRole

  # Secrets Manager
  StackSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}-secret
      Description: Secret for stack
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

  # EC2 Instance
  StackInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: m7i.large
      ImageId: !Sub '{{resolve:ssm:/aws/service/debian/release/12/latest/amd64}}'
      SubnetId: !Ref StackPublicSubnet
      IamInstanceProfile: !Ref StackInstanceProfile
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update
          apt-get install -y wget docker
          mkdir /tmp/ssm
          cd /tmp/ssm
          wget https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/debian_amd64/amazon-ssm-agent.deb
          dpkg -i amazon-ssm-agent.deb
          systemctl enable amazon-ssm-agent
          systemctl start amazon-ssm-agent
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-instance

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref StackInstance

  SecretARN:
    Description: Secret ARN
    Value: !Ref StackSecret

  VPCId:
    Description: VPC ID
    Value: !Ref StackVPC